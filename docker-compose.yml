services:
  mongo:
    image: mongo:latest 
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: firetv
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: firetv-content
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok", "--quiet"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - tyk-network
    depends_on:
      - tyk

  mongo-express:
    image: mongo-express
    container_name: mongodb_express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: firetv
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongo
    ports:
      - "8081:8081"
    depends_on:
      - mongo
      - tyk
    networks:
      - tyk-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.15
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - tyk-network
    depends_on:
      - tyk

  kafka:
    image: confluentinc/cp-kafka:7.2.15
    container_name: kafka
    depends_on:
      - zookeeper
      - tyk
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - tyk-network
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s

  tyk:
    image: docker.tyk.io/tyk-gateway/tyk-gateway:v5.5.0
    container_name: tyk
    ports:
      - 8080:8080
    networks:
      - tyk-network
    volumes:
      - ./tyk/tyk.standalone.conf:/opt/tyk-gateway/tyk.conf
      - ./tyk/apps:/opt/tyk-gateway/apps
      - ./tyk/middleware:/opt/tyk-gateway/middleware
      - ./tyk/certs:/opt/tyk-gateway/certs
      - ./tyk/policies:/opt/tyk-gateway/policies
    environment:
      - TYK_GW_SECRET=foo
    depends_on:
      - tyk-redis

  tyk-redis:
    image: redis:6.2.7-alpine
    container_name: redis
    networks:
      - tyk-network
    ports:
      - 6379:6379

  content-aggregation:
    build: ./microservices/content_aggregation
    environment:
      MONGO_URL: mongodb://firetv:password@mongo:27017
    ports:
      - "3001:3001"
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - tyk-network

  recommendation_engine:
    build: ./microservices/ai_recommendation
    depends_on:
      kafka:
        condition: service_healthy 
      content-aggregation:
        condition: service_started
    networks:
      - tyk-network

  # social-viewing:
  #   build: ./microservices/social_viewing 
  #   ports:
  #     - "3002:3002"
  #   depends_on:
  #     - content-aggregation 
  #     - tyk-gateway
  #     - tyk-redis
  #   networks:
  #     - tyk


volumes:
  mongodb_data:

networks:
  tyk-network:
    driver: bridge
